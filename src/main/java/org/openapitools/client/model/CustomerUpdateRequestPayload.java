/*
 * CDP Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CustomerAddressEntity;
import org.openapitools.client.model.CustomerCreateConsentRequest;
import org.openapitools.client.model.CustomerEMFields;
import org.openapitools.client.model.CustomerNewsletterRequest;
import org.openapitools.client.model.CustomerPassword;
import org.openapitools.client.model.ProtobufAny;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import GeminiCommerce.Customer.JSON;

/**
 * CustomerUpdateRequestPayload
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-15T16:28:00.934703301Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class CustomerUpdateRequestPayload {
  public static final String SERIALIZED_NAME_EM = "em";
  @SerializedName(SERIALIZED_NAME_EM)
  private CustomerEMFields em;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SURNAME = "surname";
  @SerializedName(SERIALIZED_NAME_SURNAME)
  private String surname;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_BIRTHDATE = "birthdate";
  @SerializedName(SERIALIZED_NAME_BIRTHDATE)
  private OffsetDateTime birthdate;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<CustomerAddressEntity> addresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_BILLING_ADDRESS_ID = "defaultBillingAddressId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BILLING_ADDRESS_ID)
  private String defaultBillingAddressId;

  public static final String SERIALIZED_NAME_DEFAULT_SHIPPING_ADDRESS_ID = "defaultShippingAddressId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SHIPPING_ADDRESS_ID)
  private String defaultShippingAddressId;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  private String nationality;

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private List<String> groups = new ArrayList<>();

  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private Boolean deleted;

  public static final String SERIALIZED_NAME_NEWSLETTERS = "newsletters";
  @SerializedName(SERIALIZED_NAME_NEWSLETTERS)
  private List<CustomerNewsletterRequest> newsletters = new ArrayList<>();

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, ProtobufAny> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_MIGRATED_PASSWORD = "migratedPassword";
  @SerializedName(SERIALIZED_NAME_MIGRATED_PASSWORD)
  private CustomerPassword migratedPassword;

  public static final String SERIALIZED_NAME_PREFERRED_LOCALE = "preferredLocale";
  @SerializedName(SERIALIZED_NAME_PREFERRED_LOCALE)
  private String preferredLocale;

  public static final String SERIALIZED_NAME_TAX_CODE = "taxCode";
  @SerializedName(SERIALIZED_NAME_TAX_CODE)
  private String taxCode;

  public static final String SERIALIZED_NAME_CERTIFIED_EMAIL = "certifiedEmail";
  @SerializedName(SERIALIZED_NAME_CERTIFIED_EMAIL)
  private String certifiedEmail;

  public static final String SERIALIZED_NAME_SDI_CODE = "sdiCode";
  @SerializedName(SERIALIZED_NAME_SDI_CODE)
  private String sdiCode;

  public static final String SERIALIZED_NAME_FISCAL_CODE = "fiscalCode";
  @SerializedName(SERIALIZED_NAME_FISCAL_CODE)
  private String fiscalCode;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_ADDITIONAL_INFO = "additionalInfo";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFO)
  private Object additionalInfo;

  public static final String SERIALIZED_NAME_MARKET = "market";
  @SerializedName(SERIALIZED_NAME_MARKET)
  private String market;

  public static final String SERIALIZED_NAME_EXTERNAL_IDS = "externalIds";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_IDS)
  private Map<String, String> externalIds = new HashMap<>();

  public static final String SERIALIZED_NAME_CONSENT = "consent";
  @SerializedName(SERIALIZED_NAME_CONSENT)
  private CustomerCreateConsentRequest consent;

  public CustomerUpdateRequestPayload() {
  }

  public CustomerUpdateRequestPayload em(CustomerEMFields em) {
    this.em = em;
    return this;
  }

  /**
   * Get em
   * @return em
   */
  @javax.annotation.Nullable
  public CustomerEMFields getEm() {
    return em;
  }

  public void setEm(CustomerEMFields em) {
    this.em = em;
  }


  public CustomerUpdateRequestPayload name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CustomerUpdateRequestPayload surname(String surname) {
    this.surname = surname;
    return this;
  }

  /**
   * Get surname
   * @return surname
   */
  @javax.annotation.Nullable
  public String getSurname() {
    return surname;
  }

  public void setSurname(String surname) {
    this.surname = surname;
  }


  public CustomerUpdateRequestPayload email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public CustomerUpdateRequestPayload birthdate(OffsetDateTime birthdate) {
    this.birthdate = birthdate;
    return this;
  }

  /**
   * Get birthdate
   * @return birthdate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getBirthdate() {
    return birthdate;
  }

  public void setBirthdate(OffsetDateTime birthdate) {
    this.birthdate = birthdate;
  }


  public CustomerUpdateRequestPayload gender(String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }


  public CustomerUpdateRequestPayload enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public CustomerUpdateRequestPayload source(String source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }


  public CustomerUpdateRequestPayload addresses(List<CustomerAddressEntity> addresses) {
    this.addresses = addresses;
    return this;
  }

  public CustomerUpdateRequestPayload addAddressesItem(CustomerAddressEntity addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

  /**
   * Get addresses
   * @return addresses
   */
  @javax.annotation.Nullable
  public List<CustomerAddressEntity> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<CustomerAddressEntity> addresses) {
    this.addresses = addresses;
  }


  public CustomerUpdateRequestPayload defaultBillingAddressId(String defaultBillingAddressId) {
    this.defaultBillingAddressId = defaultBillingAddressId;
    return this;
  }

  /**
   * Get defaultBillingAddressId
   * @return defaultBillingAddressId
   */
  @javax.annotation.Nullable
  public String getDefaultBillingAddressId() {
    return defaultBillingAddressId;
  }

  public void setDefaultBillingAddressId(String defaultBillingAddressId) {
    this.defaultBillingAddressId = defaultBillingAddressId;
  }


  public CustomerUpdateRequestPayload defaultShippingAddressId(String defaultShippingAddressId) {
    this.defaultShippingAddressId = defaultShippingAddressId;
    return this;
  }

  /**
   * Get defaultShippingAddressId
   * @return defaultShippingAddressId
   */
  @javax.annotation.Nullable
  public String getDefaultShippingAddressId() {
    return defaultShippingAddressId;
  }

  public void setDefaultShippingAddressId(String defaultShippingAddressId) {
    this.defaultShippingAddressId = defaultShippingAddressId;
  }


  public CustomerUpdateRequestPayload phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public CustomerUpdateRequestPayload nationality(String nationality) {
    this.nationality = nationality;
    return this;
  }

  /**
   * Get nationality
   * @return nationality
   */
  @javax.annotation.Nullable
  public String getNationality() {
    return nationality;
  }

  public void setNationality(String nationality) {
    this.nationality = nationality;
  }


  public CustomerUpdateRequestPayload groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public CustomerUpdateRequestPayload addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nullable
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }


  public CustomerUpdateRequestPayload deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * Get deleted
   * @return deleted
   */
  @javax.annotation.Nullable
  public Boolean getDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public CustomerUpdateRequestPayload newsletters(List<CustomerNewsletterRequest> newsletters) {
    this.newsletters = newsletters;
    return this;
  }

  public CustomerUpdateRequestPayload addNewslettersItem(CustomerNewsletterRequest newslettersItem) {
    if (this.newsletters == null) {
      this.newsletters = new ArrayList<>();
    }
    this.newsletters.add(newslettersItem);
    return this;
  }

  /**
   * Get newsletters
   * @return newsletters
   */
  @javax.annotation.Nullable
  public List<CustomerNewsletterRequest> getNewsletters() {
    return newsletters;
  }

  public void setNewsletters(List<CustomerNewsletterRequest> newsletters) {
    this.newsletters = newsletters;
  }


  public CustomerUpdateRequestPayload attributes(Map<String, ProtobufAny> attributes) {
    this.attributes = attributes;
    return this;
  }

  public CustomerUpdateRequestPayload putAttributesItem(String key, ProtobufAny attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, ProtobufAny> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, ProtobufAny> attributes) {
    this.attributes = attributes;
  }


  public CustomerUpdateRequestPayload migratedPassword(CustomerPassword migratedPassword) {
    this.migratedPassword = migratedPassword;
    return this;
  }

  /**
   * Get migratedPassword
   * @return migratedPassword
   */
  @javax.annotation.Nullable
  public CustomerPassword getMigratedPassword() {
    return migratedPassword;
  }

  public void setMigratedPassword(CustomerPassword migratedPassword) {
    this.migratedPassword = migratedPassword;
  }


  public CustomerUpdateRequestPayload preferredLocale(String preferredLocale) {
    this.preferredLocale = preferredLocale;
    return this;
  }

  /**
   * Get preferredLocale
   * @return preferredLocale
   */
  @javax.annotation.Nullable
  public String getPreferredLocale() {
    return preferredLocale;
  }

  public void setPreferredLocale(String preferredLocale) {
    this.preferredLocale = preferredLocale;
  }


  public CustomerUpdateRequestPayload taxCode(String taxCode) {
    this.taxCode = taxCode;
    return this;
  }

  /**
   * Get taxCode
   * @return taxCode
   */
  @javax.annotation.Nullable
  public String getTaxCode() {
    return taxCode;
  }

  public void setTaxCode(String taxCode) {
    this.taxCode = taxCode;
  }


  public CustomerUpdateRequestPayload certifiedEmail(String certifiedEmail) {
    this.certifiedEmail = certifiedEmail;
    return this;
  }

  /**
   * Get certifiedEmail
   * @return certifiedEmail
   */
  @javax.annotation.Nullable
  public String getCertifiedEmail() {
    return certifiedEmail;
  }

  public void setCertifiedEmail(String certifiedEmail) {
    this.certifiedEmail = certifiedEmail;
  }


  public CustomerUpdateRequestPayload sdiCode(String sdiCode) {
    this.sdiCode = sdiCode;
    return this;
  }

  /**
   * Get sdiCode
   * @return sdiCode
   */
  @javax.annotation.Nullable
  public String getSdiCode() {
    return sdiCode;
  }

  public void setSdiCode(String sdiCode) {
    this.sdiCode = sdiCode;
  }


  public CustomerUpdateRequestPayload fiscalCode(String fiscalCode) {
    this.fiscalCode = fiscalCode;
    return this;
  }

  /**
   * Get fiscalCode
   * @return fiscalCode
   */
  @javax.annotation.Nullable
  public String getFiscalCode() {
    return fiscalCode;
  }

  public void setFiscalCode(String fiscalCode) {
    this.fiscalCode = fiscalCode;
  }


  public CustomerUpdateRequestPayload companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public CustomerUpdateRequestPayload additionalInfo(Object additionalInfo) {
    this.additionalInfo = additionalInfo;
    return this;
  }

  /**
   * Get additionalInfo
   * @return additionalInfo
   */
  @javax.annotation.Nullable
  public Object getAdditionalInfo() {
    return additionalInfo;
  }

  public void setAdditionalInfo(Object additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  public CustomerUpdateRequestPayload market(String market) {
    this.market = market;
    return this;
  }

  /**
   * Get market
   * @return market
   */
  @javax.annotation.Nullable
  public String getMarket() {
    return market;
  }

  public void setMarket(String market) {
    this.market = market;
  }


  public CustomerUpdateRequestPayload externalIds(Map<String, String> externalIds) {
    this.externalIds = externalIds;
    return this;
  }

  public CustomerUpdateRequestPayload putExternalIdsItem(String key, String externalIdsItem) {
    if (this.externalIds == null) {
      this.externalIds = new HashMap<>();
    }
    this.externalIds.put(key, externalIdsItem);
    return this;
  }

  /**
   * Get externalIds
   * @return externalIds
   */
  @javax.annotation.Nullable
  public Map<String, String> getExternalIds() {
    return externalIds;
  }

  public void setExternalIds(Map<String, String> externalIds) {
    this.externalIds = externalIds;
  }


  public CustomerUpdateRequestPayload consent(CustomerCreateConsentRequest consent) {
    this.consent = consent;
    return this;
  }

  /**
   * Get consent
   * @return consent
   */
  @javax.annotation.Nullable
  public CustomerCreateConsentRequest getConsent() {
    return consent;
  }

  public void setConsent(CustomerCreateConsentRequest consent) {
    this.consent = consent;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CustomerUpdateRequestPayload instance itself
   */
  public CustomerUpdateRequestPayload putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerUpdateRequestPayload customerUpdateRequestPayload = (CustomerUpdateRequestPayload) o;
    return Objects.equals(this.em, customerUpdateRequestPayload.em) &&
        Objects.equals(this.name, customerUpdateRequestPayload.name) &&
        Objects.equals(this.surname, customerUpdateRequestPayload.surname) &&
        Objects.equals(this.email, customerUpdateRequestPayload.email) &&
        Objects.equals(this.birthdate, customerUpdateRequestPayload.birthdate) &&
        Objects.equals(this.gender, customerUpdateRequestPayload.gender) &&
        Objects.equals(this.enabled, customerUpdateRequestPayload.enabled) &&
        Objects.equals(this.source, customerUpdateRequestPayload.source) &&
        Objects.equals(this.addresses, customerUpdateRequestPayload.addresses) &&
        Objects.equals(this.defaultBillingAddressId, customerUpdateRequestPayload.defaultBillingAddressId) &&
        Objects.equals(this.defaultShippingAddressId, customerUpdateRequestPayload.defaultShippingAddressId) &&
        Objects.equals(this.phoneNumber, customerUpdateRequestPayload.phoneNumber) &&
        Objects.equals(this.nationality, customerUpdateRequestPayload.nationality) &&
        Objects.equals(this.groups, customerUpdateRequestPayload.groups) &&
        Objects.equals(this.deleted, customerUpdateRequestPayload.deleted) &&
        Objects.equals(this.newsletters, customerUpdateRequestPayload.newsletters) &&
        Objects.equals(this.attributes, customerUpdateRequestPayload.attributes) &&
        Objects.equals(this.migratedPassword, customerUpdateRequestPayload.migratedPassword) &&
        Objects.equals(this.preferredLocale, customerUpdateRequestPayload.preferredLocale) &&
        Objects.equals(this.taxCode, customerUpdateRequestPayload.taxCode) &&
        Objects.equals(this.certifiedEmail, customerUpdateRequestPayload.certifiedEmail) &&
        Objects.equals(this.sdiCode, customerUpdateRequestPayload.sdiCode) &&
        Objects.equals(this.fiscalCode, customerUpdateRequestPayload.fiscalCode) &&
        Objects.equals(this.companyName, customerUpdateRequestPayload.companyName) &&
        Objects.equals(this.additionalInfo, customerUpdateRequestPayload.additionalInfo) &&
        Objects.equals(this.market, customerUpdateRequestPayload.market) &&
        Objects.equals(this.externalIds, customerUpdateRequestPayload.externalIds) &&
        Objects.equals(this.consent, customerUpdateRequestPayload.consent)&&
        Objects.equals(this.additionalProperties, customerUpdateRequestPayload.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(em, name, surname, email, birthdate, gender, enabled, source, addresses, defaultBillingAddressId, defaultShippingAddressId, phoneNumber, nationality, groups, deleted, newsletters, attributes, migratedPassword, preferredLocale, taxCode, certifiedEmail, sdiCode, fiscalCode, companyName, additionalInfo, market, externalIds, consent, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerUpdateRequestPayload {\n");
    sb.append("    em: ").append(toIndentedString(em)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    birthdate: ").append(toIndentedString(birthdate)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    defaultBillingAddressId: ").append(toIndentedString(defaultBillingAddressId)).append("\n");
    sb.append("    defaultShippingAddressId: ").append(toIndentedString(defaultShippingAddressId)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    newsletters: ").append(toIndentedString(newsletters)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    migratedPassword: ").append(toIndentedString(migratedPassword)).append("\n");
    sb.append("    preferredLocale: ").append(toIndentedString(preferredLocale)).append("\n");
    sb.append("    taxCode: ").append(toIndentedString(taxCode)).append("\n");
    sb.append("    certifiedEmail: ").append(toIndentedString(certifiedEmail)).append("\n");
    sb.append("    sdiCode: ").append(toIndentedString(sdiCode)).append("\n");
    sb.append("    fiscalCode: ").append(toIndentedString(fiscalCode)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    externalIds: ").append(toIndentedString(externalIds)).append("\n");
    sb.append("    consent: ").append(toIndentedString(consent)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("em");
    openapiFields.add("name");
    openapiFields.add("surname");
    openapiFields.add("email");
    openapiFields.add("birthdate");
    openapiFields.add("gender");
    openapiFields.add("enabled");
    openapiFields.add("source");
    openapiFields.add("addresses");
    openapiFields.add("defaultBillingAddressId");
    openapiFields.add("defaultShippingAddressId");
    openapiFields.add("phoneNumber");
    openapiFields.add("nationality");
    openapiFields.add("groups");
    openapiFields.add("deleted");
    openapiFields.add("newsletters");
    openapiFields.add("attributes");
    openapiFields.add("migratedPassword");
    openapiFields.add("preferredLocale");
    openapiFields.add("taxCode");
    openapiFields.add("certifiedEmail");
    openapiFields.add("sdiCode");
    openapiFields.add("fiscalCode");
    openapiFields.add("companyName");
    openapiFields.add("additionalInfo");
    openapiFields.add("market");
    openapiFields.add("externalIds");
    openapiFields.add("consent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomerUpdateRequestPayload
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomerUpdateRequestPayload.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerUpdateRequestPayload is not found in the empty JSON string", CustomerUpdateRequestPayload.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `em`
      if (jsonObj.get("em") != null && !jsonObj.get("em").isJsonNull()) {
        CustomerEMFields.validateJsonElement(jsonObj.get("em"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("surname") != null && !jsonObj.get("surname").isJsonNull()) && !jsonObj.get("surname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `surname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("surname").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
          }

          // validate the optional field `addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            CustomerAddressEntity.validateJsonElement(jsonArrayaddresses.get(i));
          };
        }
      }
      if ((jsonObj.get("defaultBillingAddressId") != null && !jsonObj.get("defaultBillingAddressId").isJsonNull()) && !jsonObj.get("defaultBillingAddressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultBillingAddressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultBillingAddressId").toString()));
      }
      if ((jsonObj.get("defaultShippingAddressId") != null && !jsonObj.get("defaultShippingAddressId").isJsonNull()) && !jsonObj.get("defaultShippingAddressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultShippingAddressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultShippingAddressId").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      if ((jsonObj.get("nationality") != null && !jsonObj.get("nationality").isJsonNull()) && !jsonObj.get("nationality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationality").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("groups") != null && !jsonObj.get("groups").isJsonNull() && !jsonObj.get("groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `groups` to be an array in the JSON string but got `%s`", jsonObj.get("groups").toString()));
      }
      if (jsonObj.get("newsletters") != null && !jsonObj.get("newsletters").isJsonNull()) {
        JsonArray jsonArraynewsletters = jsonObj.getAsJsonArray("newsletters");
        if (jsonArraynewsletters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("newsletters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `newsletters` to be an array in the JSON string but got `%s`", jsonObj.get("newsletters").toString()));
          }

          // validate the optional field `newsletters` (array)
          for (int i = 0; i < jsonArraynewsletters.size(); i++) {
            CustomerNewsletterRequest.validateJsonElement(jsonArraynewsletters.get(i));
          };
        }
      }
      // validate the optional field `migratedPassword`
      if (jsonObj.get("migratedPassword") != null && !jsonObj.get("migratedPassword").isJsonNull()) {
        CustomerPassword.validateJsonElement(jsonObj.get("migratedPassword"));
      }
      if ((jsonObj.get("preferredLocale") != null && !jsonObj.get("preferredLocale").isJsonNull()) && !jsonObj.get("preferredLocale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredLocale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredLocale").toString()));
      }
      if ((jsonObj.get("taxCode") != null && !jsonObj.get("taxCode").isJsonNull()) && !jsonObj.get("taxCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCode").toString()));
      }
      if ((jsonObj.get("certifiedEmail") != null && !jsonObj.get("certifiedEmail").isJsonNull()) && !jsonObj.get("certifiedEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certifiedEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certifiedEmail").toString()));
      }
      if ((jsonObj.get("sdiCode") != null && !jsonObj.get("sdiCode").isJsonNull()) && !jsonObj.get("sdiCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdiCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdiCode").toString()));
      }
      if ((jsonObj.get("fiscalCode") != null && !jsonObj.get("fiscalCode").isJsonNull()) && !jsonObj.get("fiscalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fiscalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fiscalCode").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("market") != null && !jsonObj.get("market").isJsonNull()) && !jsonObj.get("market").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `market` to be a primitive type in the JSON string but got `%s`", jsonObj.get("market").toString()));
      }
      // validate the optional field `consent`
      if (jsonObj.get("consent") != null && !jsonObj.get("consent").isJsonNull()) {
        CustomerCreateConsentRequest.validateJsonElement(jsonObj.get("consent"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerUpdateRequestPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerUpdateRequestPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerUpdateRequestPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerUpdateRequestPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerUpdateRequestPayload>() {
           @Override
           public void write(JsonWriter out, CustomerUpdateRequestPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerUpdateRequestPayload read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             CustomerUpdateRequestPayload instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomerUpdateRequestPayload given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomerUpdateRequestPayload
   * @throws IOException if the JSON string is invalid with respect to CustomerUpdateRequestPayload
   */
  public static CustomerUpdateRequestPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerUpdateRequestPayload.class);
  }

  /**
   * Convert an instance of CustomerUpdateRequestPayload to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

